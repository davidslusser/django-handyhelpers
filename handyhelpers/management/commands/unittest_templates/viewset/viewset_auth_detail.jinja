def test_{{ route.name|replace("-", "_") }}_authorized(self):
        """ verify that {{ route.name }} endpoint returns a 200 and the row content is found """
        url = reverse('{{ route.app_name }}:{{ route.name }}'{% if '-list' not in route.name %}, args=[getattr(self.row, '{{ view.lookup_field }}')]{% endif %})
        client = create_custom_client('lab')
        response = client.get(url, format='json')
        self.assertEqual(response.status_code, status.HTTP_200_OK)
        self.assertEqual(response.json()['{% if view.lookup_field == 'pk' %}{{ view.model._meta.pk.name }}{% else %}{{ view.lookup_field }}{% endif %}'], getattr(self.row, '{{ view.lookup_field }}'))

    def test_{{ route.name|replace("-", "_") }}_unauthorized(self):
        """ verify the confirmation-list endpoint returns a 401 and the row content is not found """
        url = reverse('{{ route.app_name }}:{{ route.name }}'{% if '-list' not in route.name %}, args=[getattr(self.row, '{{ view.lookup_field }}')]{% endif %})
        response = self.client.get(url, format='json')
        self.assertEqual(response.status_code, status.HTTP_403_FORBIDDEN)
        self.assertNotIn(getattr(self.row, '{{ view.lookup_field }}'), response.json())
