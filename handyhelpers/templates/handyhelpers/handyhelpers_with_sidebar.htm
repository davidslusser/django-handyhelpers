{% load static %}

<!DOCTYPE html>

<html lang="en" data-bs-theme="light">
    {# block for main header content #}
    {% block mainheader %}
    <head>
        <meta charset="utf-8">
        <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <meta name="viewport" content="width=device-width, initial-scale=1">

        {# block to set favicon #}
        {% block favicon %}{% endblock favicon %}

        {# block for project defined HEAD content #}
        {% block project_head %}
        <link href="{% static 'node_modules/bootstrap/dist/css/bootstrap.min.css' %}" rel="stylesheet">
        <link href="{% static 'node_modules/@fortawesome/fontawesome-free/css/all.min.css' %}" rel="stylesheet">
        <link href="{% static 'node_modules/animate.css/animate.compat.css' %}" rel="stylesheet">
        <link href="{% static 'node_modules/hover.css/css/hover.css' %}" rel="stylesheet">
        <link href="{% static 'handyhelpers/css/sidebar.css' %}" rel="stylesheet">
        {% endblock project_head %}

        {# block for app defined HEAD content #}
        {% block app_head %}{% endblock app_head %}

        {# block for page defined HEAD content #}
        {% block page_head %}{% endblock page_head %}

        {# block for locally defined HEAD content #}
        {% block local_head %}{% endblock local_head %}

    </head>
    {% endblock mainheader %}

    {% block body %}
    <body>
        <div class="wrapper">
            {% block sidebar %}
            {% endblock sidebar %}

            <div class="main">
                {% block mainnavbar %}{% endblock mainnavbar %}
                {# block to display django messages #}
                {% block messages %}
                    {% include 'handyhelpers/component/bs5/show_messages.htm' %}
                {% endblock messages %}

                <main class="content px-3 py-2">
                    {% block content %}Default Content - Local page should overwrite this{% endblock content %}
                </main>

                {% block modals %}
                {% include 'handyhelpers/htmx/bs5/generic_modal.htm' %}
                {% endblock modals %}
                {% block mainfooter %}{% endblock mainfooter%}
            </div>
        </div>

        {# project Javascript Functions #}
        {% block project_javascript %}
        <script type="text/javascript" src="{% static 'node_modules/jquery/dist/jquery.min.js' %}"></script>
        <script type="text/javascript" src="{% static 'node_modules/@popperjs/core/dist/umd/popper.min.js' %}"></script>
        <script type="text/javascript" src="{% static 'node_modules/bootstrap/dist/js/bootstrap.min.js' %}"></script>
        <script type="text/javascript" src="{% static 'node_modules/htmx.org/dist/htmx.min.js' %}"></script>
        <script type="text/javascript" src="{% static 'handyhelpers/js/sidebar.js' %}"></script>
        {% endblock project_javascript %}

        {# app Javascript Functions #}
        {% block app_javascript %}{% endblock app_javascript %}

        {# page Javascript Functions #}
        {% block page_javascript %}{% endblock page_javascript %}

        {# Local Javascript Functions #}
        {% block local_javascript %}{% endblock local_javascript %}

        {# Global Javascript Functions #}
        <script>
            {# Django CSRF Functions for AJAX Calls #}
            function getCookie(name) {
                var cookieValue = null;
                if (document.cookie && document.cookie !== '') {
                    var cookies = document.cookie.split(';');
                    for (var i = 0; i < cookies.length; i++) {
                        var cookie = jQuery.trim(cookies[i]);
                        if (cookie.substring(0, name.length + 1) === (name + '=')) {
                            cookieValue = decodeURIComponent(cookie.substring(name.length + 1));
                            break;
                        }
                    }
                }
                return cookieValue;
            }
            function csrfSafeMethod(method) {
                {# these HTTP methods do not require CSRF protection #}
                return (/^(GET|HEAD|OPTIONS|TRACE)$/.test(method));
            }
            var csrftoken = getCookie('csrftoken');
        </script>

    </body>
    {% endblock body %}
</html>
